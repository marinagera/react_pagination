{"version":3,"sources":["Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","toNextPage","toPrevPage","pageBlocks","Math","ceil","startPage","endPage","isLastPage","prevHiddenPage","lastHiddenPage","arrayPages","Array","from","keys","map","num","isBlockHidden","item","className","type","disabled","onClick","el","hidden","classNames","App","state","page","setState","onPerPageChange","event","target","value","this","htmlFor","name","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAaaA,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,WAEMC,EAAaC,KAAKC,KAAKR,EAAQC,GAC/BQ,EAAYR,GAAWC,EAAc,GAAK,EAC1CQ,EAAUJ,IAAeJ,EAAcF,EAAQE,EAAcD,EAC7DU,EAAaT,GAAeI,EAC5BM,EAAiBV,EAAc,EAC/BW,EAAiBX,EAAc,EAE/BY,EAAaC,MAAMC,KAAKD,MAAMT,GAAYW,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAM,KAEnEC,EAAgB,SAACC,GACrB,OAAa,IAATA,GACCA,IAASnB,GACTmB,IAASnB,EAAc,GACvBmB,IAASnB,EAAc,GACvBmB,EAAOf,GAiBd,OACE,sBAAKgB,UAAU,aAAf,UACE,oBAAIA,UAAU,mBAAd,mBACMb,EADN,cACqBC,EADrB,eACmCV,KAEnC,qBAAIsB,UAAU,kBAAd,UACE,6BACE,wBACEC,KAAK,SACLD,UAAU,oBACVE,SAA0B,IAAhBtB,EACVuB,QAASpB,EAJX,wBAUDS,EAAWI,KAAI,SAAAQ,GAAE,OAChB,sCACIA,IAAOd,GAAkBc,IAAOb,IAChC,6BACE,wBACEU,KAAK,SACLD,UAAU,kBACVK,QAlCKN,EAkCeK,EAjC9BL,IAAST,EACTV,EAAc,EACdA,GAAeI,EAAa,GA4BpB,kBADOoB,GAWX,6BACE,wBACEH,KAAK,SAELD,UAAWM,IACT,kBACA,CAAE,0BAA2B1B,IAAgBwB,IAE/CC,OAAQP,EAAcM,GACtBD,QAAS,kBAAMtB,EAAauB,IAR9B,SAUGA,GARIA,QA5CC,IAACL,KA0Df,6BACE,wBACEE,KAAK,SACLD,UAAU,oBACVE,SAAUb,EACVc,QAASrB,EAJX,2BC3FGyB,EAAb,4MACEC,MAAe,CACb9B,MAAO,GACPC,QAAS,EACT8B,KAAM,GAJV,EAOE3B,WAAa,WACX,EAAK4B,UAAS,SAAAF,GAAK,MAAK,CACtBC,KAAMD,EAAMC,KAAO,OATzB,EAaE1B,WAAa,WACX,EAAK2B,UAAS,SAAAF,GAAK,MAAK,CACtBC,KAAMD,EAAMC,KAAO,OAfzB,EAmBE5B,aAAe,SAAC4B,GACd,EAAKC,SAAS,CAAED,UApBpB,EAuBEE,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZ/B,SAAUiC,EAAMC,OAAOC,MACvBL,KAAM,KA1BZ,4CA8BE,WACE,MAAiCM,KAAKP,MAA9B9B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAAS8B,EAAxB,EAAwBA,KAExB,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,wBAGA,gCACE,uBACEgB,QAAQ,UACRhB,UAAU,eAFZ,4BAMA,yBACEiB,KAAK,UACLC,GAAG,UACHJ,MAAOnC,EACPwC,SAAUJ,KAAKJ,gBAJjB,UAME,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,sBAGJ,cAAC,EAAD,CACEpC,MAAOA,EACPC,QAASA,EACTC,YAAa6B,EACb5B,aAAckC,KAAKlC,aACnBC,WAAYiC,KAAKjC,WACjBC,WAAYgC,KAAKhC,oBA/D3B,GAAyBqC,IAAMC,WCP/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0fcb10e9.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  toNextPage: () => void;\n  toPrevPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  toNextPage,\n  toPrevPage,\n}) => {\n  const pageBlocks = Math.ceil(total / perPage);\n  const startPage = perPage * (currentPage - 1) + 1;\n  const endPage = pageBlocks === currentPage ? total : currentPage * perPage;\n  const isLastPage = currentPage >= pageBlocks;\n  const prevHiddenPage = currentPage - 2;\n  const lastHiddenPage = currentPage + 2;\n\n  const arrayPages = Array.from(Array(pageBlocks).keys()).map(num => num + 1);\n\n  const isBlockHidden = (item: number) => {\n    if (item !== 1\n      && item !== currentPage\n      && item !== currentPage + 1\n      && item !== currentPage - 1\n      && item < pageBlocks) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const isDotHidden = (item: number) => {\n    if (item === prevHiddenPage\n      ? currentPage < 4\n      : currentPage >= pageBlocks - 2) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"pagination\">\n      <h1 className=\"pagination_title\">\n        {`${startPage} - ${endPage} of ${total}`}\n      </h1>\n      <ul className=\"pagination_list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"pagination_button\"\n            disabled={currentPage === 1}\n            onClick={toPrevPage}\n          >\n            Previous\n          </button>\n        </li>\n\n        {arrayPages.map(el => (\n          <>\n            {(el === prevHiddenPage || el === lastHiddenPage) && (\n              <li key={el}>\n                <button\n                  type=\"button\"\n                  className=\"pagination_item\"\n                  hidden={isDotHidden(el)}\n                >\n                  ...\n                </button>\n              </li>\n            )}\n\n            <li>\n              <button\n                type=\"button\"\n                key={el}\n                className={classNames(\n                  'pagination_item',\n                  { 'pagination_item--active': currentPage === el },\n                )}\n                hidden={isBlockHidden(el)}\n                onClick={() => onPageChange(el)}\n              >\n                {el}\n              </button>\n            </li>\n          </>\n        ))}\n\n        <li>\n          <button\n            type=\"button\"\n            className=\"pagination_button\"\n            disabled={isLastPage}\n            onClick={toNextPage}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './Pagination/Pagination';\n\ntype State = {\n  total: number,\n  perPage: number,\n  page: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  toNextPage = () => {\n    this.setState(state => ({\n      page: state.page + 1,\n    }));\n  };\n\n  toPrevPage = () => {\n    this.setState(state => ({\n      page: state.page - 1,\n    }));\n  };\n\n  onPageChange = (page: number) => {\n    this.setState({ page });\n  };\n\n  onPerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      perPage: +event.target.value,\n      page: 1,\n    });\n  };\n\n  render() {\n    const { total, perPage, page } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App_title\">\n          Pagination\n        </h1>\n        <div>\n          <label\n            htmlFor=\"perPage\"\n            className=\"App_subtitle\"\n          >\n            Items per page\n          </label>\n          <select\n            name=\"perPage\"\n            id=\"perPage\"\n            value={perPage}\n            onChange={this.onPerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <Pagination\n          total={total}\n          perPage={perPage}\n          currentPage={page}\n          onPageChange={this.onPageChange}\n          toNextPage={this.toNextPage}\n          toPrevPage={this.toPrevPage}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}